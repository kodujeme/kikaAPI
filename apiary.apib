FORMAT: 1A
HOST: https://system.fhb.sk/api

# Kika Api

# Group Login

Každý klient má svoje `appId` a `secret`, vygenerovať sa dá v ZOE (klientský portál). Pomocou týchto hodnôt sa prihlási a k dalším resoursom pristupuje pomocou access tokenu získaného pri prihlásení. 
Keď token vyprší, je potrebné sa znovu prihlásiť a získat nový token.
 
## Login [/login]
 
- `token` - prístupový token (jeho maximálna dĺžka je 100 znakov)
- `expiration` - datum a čas expirácie prístupového tokenu
 
### POST
 
**Parameters**
 
- appId (required, string, `1234`) ... ID aplikace
- secret (required, string, `1234`) ... Tajný kód aplikácie
 
+ Request (application/json)
 
    + Body
   
            {
                "appId": "1234",
                "secret": "1234"
            }
 
    + Schema
   
            {
                "type": "object",
                "properties": {
                    "appId": { "type": "string", "required": true },
                    "secret": { "type": "string", "required": true }
                }
            }
 
+ Response 200 (application/json)
 
    + Body
 
            { "token": "A98ophrkh67", "expiration": "2014-07-08 15:00:00 +0100" }
 
    + Schema
 
            {
                "type": "object",
                "properties": {
                    "token": { "type": "string", "required": true },
                    "expiration": { "type": "string", "required": true }
                }
            }

+ Request (application/json)
 
    + Body
   
            {
                "appId": "",
                "secret": ""
            }
 
    + Schema
   
            {
                "type": "object",
                "properties": {
                    "appId": { "type": "string", "required": true },
                    "secret": { "type": "string", "required": true }
                }
            }
 
+ Response 401
 
+ Response 405
 
    + Headers
           
            Allow: POST
 
+ Response 500



# Group Products

## Products [/products]

### POST

Vracia informácie o novo vytvorenom produkte - jeho ID a URL, na kterom je dostupné.

**Parameters**

- id (required, 123) ... unikátne ID produktu (na základe tohoto kódu sa párujú produkty, preto sa musí jednať o unikátne ID pre každý výrobok, ktoré sa v čase nemení)
    Pozor na znaky: #, &, %, + a pod.
- ean ("8580000000000") ... EAN-13
- name (required, "Šampón") ... názov produktu (max 150 znakov)
- photoUrl ("http://example.com/image.png") ... odkaz na verejne prístupnú fotografiu produktu, napr. v e-shope (max 255 znakov)
- type("single")- ... nepovinný parameter, defaulne "single" - jednoduchý produkt, može byť "multi" v prípade, že sa jedna o zložený výrobok
- parts() ... uvadzať len v prípade type: multi - zoznam produktov (musia existovat), z ktorych sa sklada zlozeny produkt 
+ Request (application/json)

    + Headers
    
            X-Authentication-Simple: base64_encode(token)

    + Body

            {
                "id": 123,
                "ean": "8580000001234",
                "name": "Šampón",
                "photoUrl": "http://example.com/image.png"
                "type": "single"
                "_embedded":{
                    "parts":[
                        {
                            "id": "123",
                        }
                        {
                            "id": "124",
                        }
                    ]
                }
            }

+ Response 201 (application/hal+json)


    + Body

            {
                "_links": {
                    "self": { "href": "/products/1" }
                },
                "_id": 1
            }

+ Response 409

    + Body

            {
                "_links": {
                    "self": { "href": "/products/1" }
                },
                "error": "Resource already exists, send PUT at address in _links.self.href"
            }


+ Response 500


+ Request Unauthorized

    + Headers
    
            X-Authentication-Simple: abcd

+ Response 401

+ Response 405

    + Headers
            
            Allow: POST, GET

+ Response 500



## Products [/products{?page}]

+ Parameters

    + page (optional, number, `1`) ... Číslo strany

### GET

Umožňuje procházet existujúce produkty v databáze, vracia informácie o výrobku a jeho aktuálny stav na sklade. Limit 300 záznamov na stranu

+ Request (application/json)

    + Headers
    
            X-Authentication-Simple: base64_encode(token)

+ Response 200 (application/hal+json)


    + Body


            {
                "_links": {
                    "self": { "href": "/products?page=1" },
                    "next": { "href": "/products?page=2" }
                },
                "_embedded": {
                    "products":[
                        {
                            "_links" : {
                                "self": { "href": "/products/1" }
                            },
                            "_id": 1,
    
                            "ean": "8580000000000",
                            "name": "Šampón",
                            "photoUrl": "http://example.com/image1.png"
                            "stockQuantity": 10
                        },
                        {
                            "_links" : {
                                "self": { "href": "/products/2" }
                            },
                            "_id": 2,
    
                            "ean": "4321000000000",
                            "name": "Mydlo",
                            "photoUrl": "http://example.com/image2.png"
                            "stockQuantity": 5
                        }
                    ]
                },
                "total": 2
            }


+ Response 405

    + Headers
            
            Allow: POST, GET

+ Response 500



## Products [/products/{?id}]

+ Parameters

    + id (required, `123456`) ...  Unikátne ID použité pri vytvorení produktu
    
### GET

Vrátí informace o konkrétnom produkte a jeho aktuálny stav na sklade

+ Request (application/json)

    + Headers
    
            X-Authentication-Simple: base64_encode(token)


+ Response 200 (application/hal+json)

    + Body

            {
                "_links" : {
                    "self": { "href": "/products/1" }
                },
                "_id": 1,

                "ean": "8580000000000",
                "name": "Šampón",
                "photoUrl": "http://example.com/image.png",
                "stockQuantity": 10
            }


+ Response 405

    + Headers
            
            Allow: POST, PATCH, GET

+ Response 500

### PATCH

Umožnuje editovať produkt vrátane jeho ID (po tejto zmene už staré ID nebude dostupné, túto možnosť vyuťívať len v nutnom prípade!)
Vracia informácie o zmenenom rodukte - jeho ID a URL, na kterom je dostupné.

**Parameters**

- id (123) ... unikátne ID produktu (string 30) (na základe tohoto kódu sa párujú produkty, preto sa musí jednať o unikátne ID pre každý výrobok, ktoré sa v čase nemení)
- ean ("8580000000000") ... EAN-13
- name ("Šampón") ... názov produktu (max 150 znakov)
- photoUrl ("http://example.com/image.png") ... odkaz na verejne prístupnú fotografiu produktu, napr. v e-shope (max 255 znakov)

+ Request (application/json)

    + Headers
    
            X-Authentication-Simple: base64_encode(token)

    + Body

            {
                "id": 123,
                "ean": "1234",
                "name": "Šampón",
                "photoUrl": "http://example.com/image.png"
            }

+ Response 200 (application/hal+json)


    + Body

            {
                "_links": {
                    "self": { "href": "/products/1" }
                },
                "_id": 1
            }


+ Response 500


+ Request Unauthorized

    + Headers
    
            X-Authentication-Simple: abcd

+ Response 401

+ Response 405

    + Headers
            
            Allow: PATCH, GET

+ Response 500


# Group Orders


## Orders [/orders]

### POST

**Parameters**

- id (required, 123) ... unikátne ID objednávky (string 30) - objednávka s konkrétnym ID bude akceptovaná len jeden krát. Ako ID je možné použiť napr variabilný symbol.
    Pozor na znaky: #, &, %, + a pod.
- name (required, "Martin Novák") ... Meno a priezvisko adresáta
- street (required, "Hronská 35") ... Adresa doručenia
- city ("Zvolen") ... Mesto doručenia
- psc (required, "96001") ... PSC
- country (required, "sk") ...  ISO 3166-1 alpha-2
- email (required, "email@example.com") ...  email adresáta
- phone (required, "00421900123456") ...  tel. číslo adresáta
- variableSymbol (required, "588988552") ...  variabilný symbol
- parcelService("ups") ... ["ups", "remax", "dhl", "gls", "posta"] preferovaná spoločnosť na prepravu, nepovinný parameter 
- cod ("54.98") ... suma dobierky - ak to nie je dobierka, tento parameter vynechat, alebo nastaviť nulovú hodnotu
- note ("poznamka") ... poznámka k objednávke (slúži pre fulfillment centrum - nepreposiela sa adresátovi
- items (required) ... zoznam produktov ID + množstvo - je nutné aby bol produkt vytvorený
- invoiceLink ("http://example.com/order/inv123.pdf") ... odkaz na PDF verziu faktúry


***notifyLinks***

- confirmed ("http://example.com/api/order/123/confirm") ... odkaz, ktorý sa volá ked je objednávka potvrdená a vstupuje do procesu balenia
- sent ("http://example.com/api/order/123/sent") ... odkaz, ktorý sa volá keď je objednávka je kompletná a opúšťa proces balenia



+ Request (application/json)

    + Headers
    
            X-Authentication-Simple: base64_encode(token)

    + Body

            {
                "id": 123, 
                "name": "Martin Novák", 
                "street": "Hronská 35",
                "city": "Zvolen",
                "psc": "96001",
                "country": "sk",
                "email": "email@example.com",
                "phone": "00421900123456",
                "variableSymbol": "588988552",
                "parcelService": "ups",
                "cod": "54.98",
                "note": "poznamka",
                "invoiceLink": "http://example.com/order/inv123.pdf",
                "_embedded":{
                    "items":[
                        {
                            "id": "123",
                            "qty": "5"
                        },
                        {
                            "id": "124",
                            "qty": "1"
                        }
                    ],
                    "notifyLinks":[
                        {
                            "confirmed": "http://example.com/api/order/123/confirm",
                            "sent": "http://example.com/api/order/123/sent"
                        }
                    ]
                }
                
            }

+ Response 201 (application/hal+json)

    + Headers

            Link: </orders/1>;rel=self

    + Body

            {
                "_links": {
                    "self": { "href": "/orders/1" }
                },
                "_id": 1
            }

+ Response 409

    + Body

            {
                "status": "error",
                "message": "Resource already exists, send PUT at address"
            }


+ Response 500


+ Request Unauthorized

    + Headers
    
            X-Authentication-Simple: abcd

+ Response 400
    + Body

            {
                "status": "error",
                "message": "Product with id 124 not found, please create it via POST /products",
                "productId": "124"
            }

+ Response 405

    + Headers
            
            Allow: POST

+ Response 500


## Orders [/orders/{?id}]

+ Parameters

    + id (required, 1) ... ID objednávky

### GET

Vráti info o konkretnej objednávke

+ Request (application/json)

    + Headers
    
            X-Authentication-Simple: base64_encode(token)

+ Response 200 (application/hal+json)

    + Body

            {
                "id": 123,
                "status": "delivered", //pending, confirmed, sent, delivered
                "trackingNumber": 4564554654,
                "parcelService": "ups",
                "name": "Martin Novák", 
                "street": "Hronská 35",
                "city": "Zvolen", 
                "psc": "96001", 
                "country": "sk", 
                "email": "email@example.com",
                "phone": "00421900123456",
                "variableSymbol": "588988552", 
                "parcelService": "ups",
                "cod": "54.98",
                "note": "poznamka",
                "invoiceLink": "http://example.com/order/inv123.pdf",
                "_embedded":{
                    "trackingNumber":["123", "124"],
                    "items":[
                        {
                            "id": "123",
                            "qty": "5"
                        },
                        {
                            "id": "124",
                            "qty": "1"
                        }
                    ]
                }
            }

+ Response 405

    + Headers
            
            Allow: GET, PUT, DELETE

+ Response 500


### PUT

Prepíše objednávku s rovnakým ID, je možné len v prípade, že je v stave Pending, rovnake parametre ako pri POST.

+ Request (application/json)

    + Headers
    
            X-Authentication-Simple: base64_encode(token)

    + Body

            {
                "id": 123, 
                "name": "Martin Novák", 
                "street": "Hronská 35",
                "city": "Zvolen",
                "psc": "96001",
                "country": "sk",
                "email": "email@example.com",
                "phone": "00421900123456",
                "variableSymbol": "588988552",
                "parcelService": "ups",
                "cod": "54.98",
                "note": "poznamka",
                "invoiceLink": "http://example.com/order/inv123.pdf",
                "_embedded":{
                    "items":[
                        {
                            "id": "123",
                            "qty": "5"
                        },
                        {
                            "id": "124",
                            "qty": "1"
                        }
                    ],
                    "notifyLinks":[
                        {
                            "confirmed": "http://example.com/api/order/123/confirm",
                            "sent": "http://example.com/api/order/123/sent"
                        }
                    ]
                }
                
            }

+ Response 200 (application/hal+json)

    + Headers

            Link: </orders/1>;rel=self

    + Body

            {
                "_links": {
                    "self": { "href": "/orders/1" }
                },
                "_id": 1
            }
+ Response 400
    + Body

            {
                "status": "error",
                "message": "Product with id 124 not found, please create it via POST /products",
                "productId": "124"
            }
+ Response 409


    + Body

            {
                "status": "error",
                "message": "Order has not Pending status"
            }


+ Response 500


+ Request Unauthorized

    + Headers
    
            X-Authentication-Simple: abcd

+ Response 401

+ Response 405

    + Headers
            
            Allow: GET, PUT, DELETE

+ Response 500


### DELETE

Vymaže objednávku je možné len v prípade, že je v stave Pending.

+ Request (application/json)

    + Headers
    
            X-Authentication-Simple: base64_encode(token)


+ Response 204

+ Response 409

    + Headers

            Link: </orders/1>;rel=self

    + Body

            {
                "status": "error",
                "message": "Order has not Pending status"
            }


+ Response 500


+ Request Unauthorized

    + Headers
    
            X-Authentication-Simple: abcd

+ Response 401

+ Response 405

    + Headers
            
            Allow: GET, PUT, DELETE

+ Response 500






